/*
 * Alarm Backend
 *
 * ## API for generating and tracking alarms  This is the API of what P7M mainly uses within the Telfas service.
 *
 * The version of the OpenAPI document: 0.2.1
 * Contact: tech@p7m.de
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AlarmType {
    #[serde(rename = "alarmTypeId")]
    pub alarm_type_id: String,
    #[serde(rename = "tenantId")]
    pub tenant_id: String,
    #[serde(rename = "label")]
    pub label: String,
    #[serde(rename = "sendCall")]
    pub send_call: bool,
    #[serde(rename = "sendSms")]
    pub send_sms: bool,
    #[serde(rename = "sendApp")]
    pub send_app: bool,
    #[serde(rename = "guidance")]
    pub guidance: crate::models::AlarmGuidance,
    #[serde(rename = "callText")]
    pub call_text: String,
    #[serde(rename = "callbackText")]
    pub callback_text: String,
    #[serde(rename = "smsText")]
    pub sms_text: String,
    #[serde(rename = "lastChange")]
    pub last_change: String,
}

impl AlarmType {
    pub fn new(alarm_type_id: String, tenant_id: String, label: String, send_call: bool, send_sms: bool, send_app: bool, guidance: crate::models::AlarmGuidance, call_text: String, callback_text: String, sms_text: String, last_change: String) -> AlarmType {
        AlarmType {
            alarm_type_id,
            tenant_id,
            label,
            send_call,
            send_sms,
            send_app,
            guidance,
            call_text,
            callback_text,
            sms_text,
            last_change,
        }
    }
}


