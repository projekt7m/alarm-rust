/*
 * Alarm Backend
 *
 * ## API for generating and tracking alarms  This is the API of what P7M mainly uses within the Telfas service.
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: tech@p7m.de
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AlarmMedium {
    #[serde(rename = "CALL")]
    Call,
    #[serde(rename = "SMS")]
    Sms,
    #[serde(rename = "APP")]
    App,

}

impl std::fmt::Display for AlarmMedium {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Call => write!(f, "CALL"),
            Self::Sms => write!(f, "SMS"),
            Self::App => write!(f, "APP"),
        }
    }
}

impl Default for AlarmMedium {
    fn default() -> AlarmMedium {
        Self::Call
    }
}

