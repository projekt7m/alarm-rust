/*
 * Alarm Backend
 *
 * ## API for generating and tracking alarms  This is the API of what P7M mainly uses within the Telfas service.
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: tech@p7m.de
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Recipient {
    #[serde(rename = "recipientId")]
    pub recipient_id: uuid::Uuid,
    #[serde(rename = "tenantId")]
    pub tenant_id: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "additionalInfo")]
    pub additional_info: String,
    #[serde(rename = "phoneNumber")]
    pub phone_number: String,
    #[serde(rename = "sendSms")]
    pub send_sms: bool,
    #[serde(rename = "sendCall")]
    pub send_call: bool,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "lastChange")]
    pub last_change: String,
}

impl Recipient {
    pub fn new(recipient_id: uuid::Uuid, tenant_id: uuid::Uuid, name: String, additional_info: String, phone_number: String, send_sms: bool, send_call: bool, active: bool, last_change: String) -> Recipient {
        Recipient {
            recipient_id,
            tenant_id,
            name,
            additional_info,
            phone_number,
            send_sms,
            send_call,
            active,
            last_change,
        }
    }
}

